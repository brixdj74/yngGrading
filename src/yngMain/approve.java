/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package yngMain;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brixd
 */
public class approve extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement pst,pst1;
    ResultSet rs,rs1;
    
    public ImageIcon logo = new ImageIcon(getClass().getResource("/img/logo.png"));
    public String empId;
    
    static final String USERNAME = "root";
    static final String PASSWORD = "";
    static final String DATACONN = "jdbc:mysql://localhost/sql12655413";
    
    public approve() {
        initComponents();
        conn = (com.mysql.jdbc.Connection) con();
        setResizable(false);
        setTitle("Approval");
        setIconImage(logo.getImage()); 
        HIDE();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer(); // create a renderer
        centerRenderer.setHorizontalAlignment(JLabel.CENTER); // set its alignment
        students.setDefaultRenderer(Object.class, centerRenderer);
        subject();
    }
    
    
    void HIDE(){
        headId.setVisible(false);
        courshey.setVisible(false);
    }
    
    public final Connection con(){
        try{
            conn = (com.mysql.jdbc.Connection) DriverManager.getConnection(DATACONN,USERNAME,PASSWORD);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        return conn;
        
    }
    
    public void subject(){
        try{
            pst = conn.prepareStatement("select distinct * from grades "
                    + "inner join employee on employee.employeeId = grades.employeeId "
                    + "inner join subjects on subjects.subjectId = grades.subjectId "
                    + "where grades.employeeId = ?");
            pst.setString(1,headId.getText());
           
            sub.removeAllItems();
            sub.addItem("Select Subject");
            
            rs = pst.executeQuery();
            while(rs.next()){
                sub.addItem(rs.getString("code"));
            }
            
        }catch(SQLException e){
            System.out.println(e);
        }
    }
    
    public void approval(){
       try{
           pst = conn.prepareStatement("select * from grades inner join subjects on subjects.subjectId = grades.subjectId inner join studentdata on studentdata.studentId = grades.studentId inner join employee on employee.employeeId = grades.employeeId where approve = 'No' and `class` = ?");
           pst.setString(1,courshey.getText());
           
           rs=pst.executeQuery();
           
           java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int n = rsmd.getColumnCount();
            DefaultTableModel dtm=(DefaultTableModel) students.getModel();
            dtm.setRowCount(0);
            while (rs.next()){
                Vector v = new Vector();
                for(int i=1;i<=n;i++){
                    v.add(rs.getString("gradesId"));
                    v.add(rs.getString("studentdata.studentId"));
                    v.add(rs.getString("lastName") + ", " + rs.getString("firstName")+" "+rs.getString("middleName"));
                    v.add(rs.getString("description"));
                    v.add(rs.getString("prelim"));
                    v.add(rs.getString("midterm"));
                    v.add(rs.getString("finals"));
                    v.add(rs.getString("average"));
                    v.add(rs.getString("gwa"));
                    v.add(rs.getString("remarks"));
                }
                dtm.addRow(v);
            }
           
       
       }catch(SQLException e){
           System.out.println(e);
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toGrades = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        sub = new javax.swing.JComboBox<>();
        disSub = new javax.swing.JLabel();
        note1 = new javax.swing.JLabel();
        headId = new javax.swing.JLabel();
        courshey = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        all = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        students = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 500));
        setSize(new java.awt.Dimension(900, 500));
        getContentPane().setLayout(null);

        toGrades.setText("Approve Grades");
        toGrades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toGradesActionPerformed(evt);
            }
        });
        getContentPane().add(toGrades);
        toGrades.setBounds(700, 410, 150, 30);

        jButton4.setText("Sort");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(790, 10, 60, 30);

        sub.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Subject" }));
        sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subActionPerformed(evt);
            }
        });
        getContentPane().add(sub);
        sub.setBounds(480, 10, 300, 30);

        disSub.setFont(new java.awt.Font("sansserif", 0, 12)); // NOI18N
        disSub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(disSub);
        disSub.setBounds(250, 10, 220, 30);

        note1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        note1.setText("Grades for Approval");
        note1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        getContentPane().add(note1);
        note1.setBounds(20, 10, 450, 30);
        getContentPane().add(headId);
        headId.setBounds(20, 400, 80, 0);
        getContentPane().add(courshey);
        courshey.setBounds(100, 400, 80, 0);

        jLabel1.setForeground(java.awt.Color.gray);
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Select student first before approving grades");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(411, 416, 280, 20);

        all.setText("Approve All");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });
        getContentPane().add(all);
        all.setBounds(20, 410, 150, 30);

        students.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "#", "ID", "Student Name", "Subject", "Prelim", "Midterm", "Finals", "Average", "GWA", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        students.setRowHeight(30);
        students.getTableHeader().setReorderingAllowed(false);
        students.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(students);
        if (students.getColumnModel().getColumnCount() > 0) {
            students.getColumnModel().getColumn(0).setMinWidth(0);
            students.getColumnModel().getColumn(0).setPreferredWidth(0);
            students.getColumnModel().getColumn(0).setMaxWidth(0);
            students.getColumnModel().getColumn(1).setMinWidth(0);
            students.getColumnModel().getColumn(1).setPreferredWidth(0);
            students.getColumnModel().getColumn(1).setMaxWidth(0);
            students.getColumnModel().getColumn(3).setMinWidth(180);
            students.getColumnModel().getColumn(3).setPreferredWidth(180);
            students.getColumnModel().getColumn(3).setMaxWidth(180);
            students.getColumnModel().getColumn(4).setMinWidth(65);
            students.getColumnModel().getColumn(4).setPreferredWidth(65);
            students.getColumnModel().getColumn(4).setMaxWidth(65);
            students.getColumnModel().getColumn(5).setMinWidth(65);
            students.getColumnModel().getColumn(5).setPreferredWidth(65);
            students.getColumnModel().getColumn(5).setMaxWidth(65);
            students.getColumnModel().getColumn(6).setMinWidth(65);
            students.getColumnModel().getColumn(6).setPreferredWidth(65);
            students.getColumnModel().getColumn(6).setMaxWidth(65);
            students.getColumnModel().getColumn(7).setMinWidth(85);
            students.getColumnModel().getColumn(7).setPreferredWidth(85);
            students.getColumnModel().getColumn(7).setMaxWidth(85);
            students.getColumnModel().getColumn(8).setMinWidth(100);
            students.getColumnModel().getColumn(8).setPreferredWidth(100);
            students.getColumnModel().getColumn(8).setMaxWidth(100);
            students.getColumnModel().getColumn(9).setMinWidth(100);
            students.getColumnModel().getColumn(9).setPreferredWidth(100);
            students.getColumnModel().getColumn(9).setMaxWidth(100);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 50, 840, 350);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void toGradesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toGradesActionPerformed
    DefaultTableModel dtm = (DefaultTableModel) students.getModel();
    int si = students.getSelectedRow();
    String name = dtm.getValueAt(si,2).toString();
    
        try{
            pst = conn.prepareStatement("update grades set approve = 'Yes' where gradesId = ?");
            pst.setString(1,dtm.getValueAt(si,0).toString());
            
            if(JOptionPane.showConfirmDialog(null,"Approve grades for \n"+name+"?","Approval",JOptionPane.YES_OPTION)==JOptionPane.YES_OPTION){
                pst.executeUpdate();
                approval();
                JOptionPane.showMessageDialog(null,"Approved!","Status",JOptionPane.INFORMATION_MESSAGE);
            }
            
        }catch(HeadlessException | SQLException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_toGradesActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
            String start = sub.getSelectedItem().toString();
            if(start.equals("Select Subject")){
                approval();
            }else{
                sort();
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)students.getModel();
        int si = students.getSelectedRow();
        int i = 0;
        int cou = students.getRowCount();
        if(JOptionPane.showConfirmDialog(null,"Continue to Approve All Grades?","Approval",JOptionPane.YES_OPTION)==JOptionPane.YES_OPTION){
        
            while(i!=cou){
                try{
                    pst=conn.prepareStatement("update grades set approve = 'Yes' where gradesId = ?");
                    pst.setString(1,dtm.getValueAt(i, 0).toString());

                    pst.executeUpdate();

                }catch(SQLException e){
                    System.out.println(e);
                }

                System.out.println("count="+i);
                i++;
            }
            
            if(i==cou){
                approval();
                JOptionPane.showMessageDialog(null,"All Grades successfully approved.","Status",JOptionPane.INFORMATION_MESSAGE);
            }else{
            JOptionPane.showMessageDialog(null,"Something went wrong while approving all grades.","Status",JOptionPane.ERROR);
        }
            
        }
        
        
    }//GEN-LAST:event_allActionPerformed

    private void studentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsMouseClicked
        DefaultTableModel dtm = (DefaultTableModel)students.getModel();
        int si = students.getSelectedRow();
        //forStud.setText(dtm.getValueAt(si, 1).toString());
        //schedId = dtm.getValueAt(si,4).toString();
    }//GEN-LAST:event_studentsMouseClicked

    private void subActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subActionPerformed
            try{
                if(sub.getSelectedItem().toString().equals("Select Subject")){
                    //do nothing
                    disSub.setText(null);
                }else{
                    hir();
                    
                }
        
            }catch(Exception e){
                
            }
    }//GEN-LAST:event_subActionPerformed

    void hir(){
        try{
            pst = conn.prepareStatement("select * from subjects "
                            + "inner join course on course.courseId = subjects.courseId "
                            + "where code = ?");
                    pst.setString(1,sub.getSelectedItem().toString());
                    rs = pst.executeQuery();
                    
                    if(rs.next()){
                        disSub.setText(rs.getString("acronym")+" - "+rs.getString("description"));
                    }
        }catch(SQLException e){
            System.out.println(e);
        }
    }
    
    public void sort(){
       try{
           pst = conn.prepareStatement("select * from grades inner join subjects on subjects.subjectId = grades.subjectId "
                   + "inner join studentdata on studentdata.studentId = grades.studentId "
                   + "inner join employee on employee.employeeId = grades.employeeId "
                   + "where approve = 'No' and `class` = ? and `code` = ?");
           pst.setString(1,courshey.getText());
           pst.setString(2,sub.getSelectedItem().toString());
           
           rs=pst.executeQuery();
           
           java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int n = rsmd.getColumnCount();
            DefaultTableModel dtm=(DefaultTableModel) students.getModel();
            dtm.setRowCount(0);
            while (rs.next()){
                Vector v = new Vector();
                for(int i=1;i<=n;i++){
                    v.add(rs.getString("gradesId"));
                    v.add(rs.getString("studentdata.studentId"));
                    v.add(rs.getString("lastName") + ", " + rs.getString("firstName")+" "+rs.getString("middleName"));
                    v.add(rs.getString("description"));
                    v.add(rs.getString("prelim"));
                    v.add(rs.getString("midterm"));
                    v.add(rs.getString("finals"));
                    v.add(rs.getString("average"));
                    v.add(rs.getString("gwa"));
                    v.add(rs.getString("remarks"));
                }
                dtm.addRow(v);
            }
           
       
       }catch(SQLException e){
           System.out.println(e);
       }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(approve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(approve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(approve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(approve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new approve().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton all;
    public javax.swing.JLabel courshey;
    public javax.swing.JLabel disSub;
    public javax.swing.JLabel headId;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel note1;
    private javax.swing.JTable students;
    private javax.swing.JComboBox<String> sub;
    private javax.swing.JButton toGrades;
    // End of variables declaration//GEN-END:variables
}
